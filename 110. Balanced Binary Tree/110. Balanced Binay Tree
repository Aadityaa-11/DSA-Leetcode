/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int Height(TreeNode* root){
        if(root == NULL) return 0;

        int leftheight = Height(root->left);
        int rightheight = Height(root->right);
        int height = max(leftheight , rightheight) + 1;
        return height;
    }
    bool isBalanced(TreeNode* root) {
        if(root == NULL) return true;

        // CurrNode
        int leftheight = Height(root->left);
        int rightheight = Height(root->right);

        int diff = abs(leftheight - rightheight);
        bool currNodeAns = (diff <= 1);

        bool leftAns = isBalanced(root->left);
        bool rightAns = isBalanced(root->right);
        
        if(currNodeAns && leftAns && rightAns ){
            return true;
        }
        else{
            return false;
        }
        
    }
};
